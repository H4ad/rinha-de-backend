version: '3'

services:
  api1:
    image: rinha-de-backend:latest
    restart: unless-stopped
    hostname: api1
    depends_on:
      - db
      - redis
    environment:
      DATABASE_URL: postgres://rinha:password@db:5432/dev?sslmode=disable
      REDIS_URL: "redis:6379"
    networks:
      - standard
    healthcheck:
      test: ['CMD-SHELL', 'curl', 'localhost:3000/contagem-pessoas']
      interval: 5s
      timeout: 5s
      retries: 20
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '225MB'

  api2:
    image: rinha-de-backend:latest
    restart: unless-stopped
    hostname: api2
    depends_on:
      - db
      - redis
    environment:
      DATABASE_URL: postgres://rinha:password@db:5432/dev?sslmode=disable
      REDIS_URL: "redis:6379"
    healthcheck:
      test: ['CMD-SHELL', 'curl', 'localhost:3000/contagem-pessoas']
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - standard
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '225MB'

  db:
    image: postgres:15.4
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: rinha
      POSTGRES_DB: dev
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U rinha -p password']
      interval: 5s
      timeout: 5s
      retries: 20
    volumes:
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - standard
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '1600MB'

  redis:
    image: redis:7.2-alpine
    ports:
      - '6379:6379'
    networks:
      - standard
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '450MB'

  nginx:
    image: nginx:1.24-alpine
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - '9999:9999'
    networks:
      - standard
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '300MB'

volumes:
  meili_data:

networks:
  standard:
    driver: 'bridge'
